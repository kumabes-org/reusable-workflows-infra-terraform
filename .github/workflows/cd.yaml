name: "CD Infra Terraform"

on:
  workflow_call:
    inputs:
      provider:
        required: true
        type: string
      environment:
        required: true
        type: string        
      destroy-infra:
        required: false
        type: boolean
        default: false

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true
  
jobs:
  job1:
    name: "job1"
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infra
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: configure aws credentials
        if: ${{ inputs.provider == 'aws' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Az CLI login"
        if: ${{ inputs.provider == 'azure' }}
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}          

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6          
        
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -recursive -check
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -var-file="variables/${{ inputs.environment }}/terraform.tfvars" -no-color -input=false
        
      - name: Terraform Apply
        if: ${{ !inputs.destroy-infra }}
        id: apply
        run: |
          terraform apply -var-file="variables/${{ inputs.environment }}/terraform.tfvars" -auto-approve -input=false

      - name: Terraform Destroy
        if: ${{ inputs.destroy-infra }}
        id: destroy
        run: |
          terraform destroy -var-file="variables/${{ inputs.environment }}/terraform.tfvars" -no-color -auto-approve -input=false